name: v2 - Migrate Secrets from AWS to Vault

on:
  workflow_dispatch:
    inputs:
      aws_role:
        description: 'Role to assume'
        required: true
        type: string
      dry_run:
        description: 'Run in dry-run mode (no actual migration)'
        required: false
        default: 'true'
        type: choice
        options:
          - 'true'
          - 'false'
      aws_secret_prefix:
        description: 'AWS Secret prefix filter (optional)'
        required: false
        default: ''
      vault_path_prefix:
        description: 'Vault path prefix (optional)'
        required: false
        default: ''

permissions:
  id-token: write   # Required for OIDC
  contents: read

jobs:
  migrate-secrets:
    runs-on: ubuntu-latest
    
    env:
      AWS_REGION: ca-central-1
      VAULT_ADDR: ${{ secrets.VAULT_ADDR }}
      VAULT_NAMESPACE: ${{ secrets.VAULT_NAMESPACE }}
      VAULT_ROLE: ${{ secrets.VAULT_ROLE }}
      VAULT_KV_MOUNT: secret  # Change if using different mount point
      DRY_RUN: ${{ inputs.dry_run || 'true' }}
      AWS_SECRET_PREFIX: ${{ inputs.aws_secret_prefix || '' }}
      VAULT_PATH_PREFIX: ${{ inputs.vault_path_prefix || '' }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      
      - name: Install dependencies
        run: |
          pip install boto3 requests
      
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ github.event.inputs.aws_role }}
          aws-region: ca-central-1
      
      - name: Verify AWS Authentication
        run: |
          aws sts get-caller-identity
      
      - name: Run Migration Script
        run: |
          python migrate_secrets_v2.py
      
      - name: Migration Summary
        if: always()
        run: |
          echo "Migration completed!"
          echo "Dry Run: ${{ env.DRY_RUN }}"
          echo "AWS Region: ${{ env.AWS_REGION }}"
          echo "Vault Namespace: ${{ env.VAULT_NAMESPACE }}"